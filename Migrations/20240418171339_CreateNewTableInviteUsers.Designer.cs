// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FollowerBot.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240418171339_CreateNewTableInviteUsers")]
    partial class CreateNewTableInviteUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.18");

            modelBuilder.Entity("FollowerBot.Models.DrinkTTK", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Addivitives")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Blank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Container")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HowToCook")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ingridients")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Photos")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<double>("Volume")
                        .HasColumnType("REAL");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("DrinkTTKs");
                });

            modelBuilder.Entity("FollowerBot.Models.Shipper", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("InviteUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("AccessUser")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("tgUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("InviteUsers");
                });

            modelBuilder.Entity("Items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Calorie")
                        .HasColumnType("REAL");

                    b.Property<double>("Carbohydrates")
                        .HasColumnType("REAL");

                    b.Property<string>("Composition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("EnergyValue")
                        .HasColumnType("REAL");

                    b.Property<string>("ExpirationsDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Fats")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Proteins")
                        .HasColumnType("REAL");

                    b.Property<int>("ShipperId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StorageConditions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ShipperId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Items", b =>
                {
                    b.HasOne("FollowerBot.Models.Shipper", "ShipperLink")
                        .WithMany("Items")
                        .HasForeignKey("ShipperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShipperLink");
                });

            modelBuilder.Entity("FollowerBot.Models.Shipper", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
